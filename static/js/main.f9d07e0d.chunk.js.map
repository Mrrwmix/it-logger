{"version":3,"sources":["actions/techActions.js","actions/types.js","components/techs/TechItem.js","components/techs/TechListModal.js","actions/logActions.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["getTechs","dispatch","a","fetch","res","json","data","type","payload","response","statusText","connect","deleteTech","id","method","tech","firstName","lastName","className","href","onClick","M","toast","html","state","techs","loading","useEffect","map","key","setLoading","searchLogs","text","useRef","style","marginBottom","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","setCurrent","log","attention","message","format","date","Preloader","getLogs","logs","length","AddBtn","t","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updatedLog","addTech","setFirstName","setLastName","initialState","error","combineReducers","action","console","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9d07e0d.chunk.js","sourcesContent":["import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from './types';\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n\r\nexport const getTechs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/techs');\r\n    const data = await res.json();\r\n    dispatch({ type: GET_TECHS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n\r\nexport const addTech = tech => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data = await res.json();\r\n    dispatch({ type: ADD_TECH, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n\r\nexport const deleteTech = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/techs/${id}`, { method: 'DELETE' });\r\n    dispatch({ type: DELETE_TECH, payload: id });\r\n  } catch (err) {\r\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize';\r\n\r\nconst TechItem = ({ tech: { firstName, lastName, id }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: 'Technician deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteTech }\r\n)(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\nimport TechItem from './TechItem';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map(tech => (\r\n              <li className='collection-item'>\r\n                <TechItem tech={tech} key={tech.id} />\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechListModal);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS\r\n} from './types';\r\n\r\nexport const getLogs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs');\r\n    const data = await res.json();\r\n    dispatch({ type: GET_LOGS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n\r\nexport const addLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const data = await res.json();\r\n    dispatch({ type: ADD_LOG, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n\r\nexport const deleteLog = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/logs/${id}`, { method: 'DELETE' });\r\n    dispatch({ type: DELETE_LOG, payload: id });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n\r\nexport const updateLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n\r\nexport const setCurrent = log => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log\r\n  };\r\n};\r\n\r\nexport const searchLogs = text => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n    dispatch({ type: SEARCH_LOGS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\r\n  }\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT\r\n  };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onChange = e => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              placeholder='Search Logs'\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className='label-icon'>\r\n              <i className='material-icons' htmlFor='search'>\r\n                search\r\n              </i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { searchLogs }\r\n)(SearchBar);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: 'Log deleted' });\r\n  };\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteLog, setCurrent }\r\n)(LogItem);\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='progress blue lighten-4'>\r\n      <div className='indeterminate blue'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport PropTypes from 'prop-types';\r\nimport Preloader from '../layout/Preloader';\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs</p>\r\n      ) : (\r\n        logs.map(log => <LogItem log={log} key={log.id} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getLogs }\r\n)(Logs);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from '../../actions/techActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport M from 'materialize-css/dist/js/materialize';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n      addLog(newLog);\r\n      M.toast({ html: `Log added by ${tech}` });\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect waves-green blue btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addLog }\r\n)(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { updateLog } from '../../actions/logActions';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport M from 'materialize-css/dist/js/materialize';\r\n\r\nconst EditLogModal = ({ updateLog, current }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const updatedLog = {\r\n        id: current.id,\r\n        message: message,\r\n        attention: attention,\r\n        tech: tech,\r\n        date: new Date()\r\n      };\r\n      updateLog(updatedLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect waves-green blue btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.log.current\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateLog }\r\n)(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter the first and last name' });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName\r\n      });\r\n      M.toast({ html: `${firstName} ${lastName} was added` });\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={e => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={e => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect waves-green blue btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addTech }\r\n)(AddTechModal);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => log.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map(log =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        )\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n  ADD_TECH\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter(tech => tech.id !== action.payload),\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, Fragment } from 'react';\nimport TechListModal from './components/techs/TechListModal';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // Initializes materialize\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <Logs />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}